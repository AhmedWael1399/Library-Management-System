@using LibraryManagementSystem.BLL.Helpers
@model PaginatedList<LibraryManagementSystem.DAL.Models.Book>

@for (int i = 1; i <= ViewBag.TotalPages; i++)
{
    <a class="btn btn-sm @(ViewBag.Page == i ? "btn-primary" : "btn-outline-primary")"
       asp-route-page="@i">@i</a>
}


<h2>Books</h2>
<a asp-action="CreateBook" class="btn btn-primary">Add Book</a>

<table class="table table-bordered mt-3">
    <thead>
        <tr>
            <th>Title</th>
            <th>Genre</th>
            <th>Description</th>
            <th>Author</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in Model)
        {
            <tr>
                <td>@book.Title</td>
                <td>@book.Genre</td>
                <td>@book.Description</td>
                <td>@book.Author.FullName</td>
                <td>
                    @await Html.PartialAsync("_BookStatusBadgePartial", book.IsBorrowed ? "Borrowed" : "Available")
                </td>

                <td>
                    <a asp-action="EditBook" asp-route-id="@book.Id" class="btn btn-sm btn-warning">Edit</a>
                    <a asp-action="DeleteBook" asp-route-id="@book.Id" class="btn btn-sm btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-center mt-3">
    @if (Model.HasPreviousPage)
    {
        <a asp-action="Index" asp-route-page="@(Model.PageIndex - 1)" class="btn btn-sm btn-outline-primary">Previous</a>
    }

    <span class="mx-2">Page @Model.PageIndex of @Model.TotalPages</span>

    @if (Model.HasNextPage)
    {
        <a asp-action="Index" asp-route-page="@(Model.PageIndex + 1)" class="btn btn-sm btn-outline-primary">Next</a>
    }
</div>


