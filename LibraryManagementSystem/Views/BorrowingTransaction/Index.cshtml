@using LibraryManagementSystem.BLL.Helpers
@model PaginatedList<LibraryManagementSystem.DAL.Models.BorrowingTransaction>

@for (int i = 1; i <= ViewBag.TotalPages; i++)
{
    <a class="btn btn-sm @(ViewBag.Page == i ? "btn-primary" : "btn-outline-primary")"
       asp-route-page="@i">@i</a>
}


<h2>Borrowing Transactions</h2>

<a asp-action="BorrowBook" class="btn btn-primary">New Borrow</a>
<a asp-controller="BorrowingTransaction" asp-action="BookStatusReport" class="btn btn-outline-info">
    View Book Status Report
</a>

<table class="table table-bordered mt-3">
    <thead>
        <tr>
            <th>Book</th>
            <th>Borrowed Date</th>
            <th>Returned Date</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var transaction in Model)
        {
            <tr>
                <td>@transaction.Book?.Title</td>
                <td>@transaction.BorrowedDate.ToShortDateString()</td>
                <td>@(transaction.ReturnedDate?.ToShortDateString() ?? "-")</td>
                <td>
                    @(transaction.ReturnedDate == null ? "Borrowed" : "Returned")
                </td>
                <td>
                    @if (transaction.ReturnedDate == null)
                    {
                        <form asp-action="ReturnBook" method="post">
                            <input type="hidden" name="bookId" value="@transaction.BookId" />
                            <button type="submit" class="btn btn-danger btn-sm">
                                Return
                            </button>
                        </form>
                    }
                    else
                    {
                        <span class="text-muted">Returned</span>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-center mt-3">
    @if (Model.HasPreviousPage)
    {
        <a asp-action="Index" asp-route-page="@(Model.PageIndex - 1)" class="btn btn-sm btn-outline-primary">Previous</a>
    }

    <span class="mx-2">Page @Model.PageIndex of @Model.TotalPages</span>

    @if (Model.HasNextPage)
    {
        <a asp-action="Index" asp-route-page="@(Model.PageIndex + 1)" class="btn btn-sm btn-outline-primary">Next</a>
    }
</div>
